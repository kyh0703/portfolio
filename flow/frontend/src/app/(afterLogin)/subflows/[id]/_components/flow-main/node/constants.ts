import type { NodeTypes } from '@xyflow/react'
import {
  AbortNode,
  AssignNode,
  CdrCallNode,
  CdrCtrlNode,
  CdrNode,
  ChangeServiceNode,
  ChoiceCallNode,
  ChoiceMentNode,
  CloseVRNode,
  ConsumerMonitNode,
  CtiCallNode,
  DBQueryNode,
  DisSwitchNode,
  DisconnectNode,
  DisconnectWebNode,
  EntityCallNode,
  GetChannelNode,
  GetDigitNode,
  GetPageDataNode,
  GhostNode,
  GoToLabelNode,
  GroupNode,
  IfNode,
  IntentCallNode,
  LogWriteNode,
  MakeCallNode,
  MemoNode,
  MenuCallNode,
  MenuChangeNode,
  MenuReturnNode,
  NLURequestNode,
  OpenVRNode,
  PacketCallNode,
  PacketJsonNode,
  PacketSizeNode,
  PlayNode,
  PushToneNode,
  RecordNode,
  RegistServerNode,
  RequestHTTPNode,
  RequestPageNode,
  RequestVRNode,
  ResponseVRNode,
  ReturnNode,
  RouteACDNode,
  RouteGroupNode,
  RouteQueueRuleNode,
  RouteSkillGroupNode,
  RouteSkillNode,
  SelectNode,
  SetEventNode,
  SetLabelNode,
  SleepNode,
  StartNode,
  StringParserNode,
  SubCallNode,
  SwitchNode,
  ToneDetectNode,
  TrackingNode,
  TransferNode,
  UnregistServerNode,
  UserDataNode,
  UserEnvNode,
  UserFuncCallNode,
  UserMenuStatNode,
  VoiceRecognizeNode,
  WaitEventNode,
  WaitInboundNode,
  WaitOutboundNode,
  WaitWebInboundNode,
} from '.'

export const nodeTypes: NodeTypes = {
  // AI
  EntityCall: EntityCallNode,
  IntentCall: IntentCallNode,
  NLURequest: NLURequestNode,
  // Database
  DBQuery: DBQueryNode,
  // Etc
  Memo: MemoNode,
  Group: GroupNode,
  Start: StartNode,
  // Event
  SetEvent: SetEventNode,
  WaitEvent: WaitEventNode,
  // Flow
  Assign: AssignNode,
  CdrCtrl: CdrCtrlNode,
  CdrCall: CdrCallNode,
  Cdr: CdrNode,
  ChangeService: ChangeServiceNode,
  GotoLabel: GoToLabelNode,
  If: IfNode,
  MenuCall: MenuCallNode,
  MenuChange: MenuChangeNode,
  MenuReturn: MenuReturnNode,
  Return: ReturnNode,
  Select: SelectNode,
  SetLabel: SetLabelNode,
  Sleep: SleepNode,
  StringParser: StringParserNode,
  SubCall: SubCallNode,
  UserEnv: UserEnvNode,
  // iWeb
  DisconnectWeb: DisconnectWebNode,
  GetPageData: GetPageDataNode,
  RegistServer: RegistServerNode,
  RequestPage: RequestPageNode,
  UnregistServer: UnregistServerNode,
  WaitWebInbound: WaitWebInboundNode,
  // Log
  LogWrite: LogWriteNode,
  // Packet
  PacketCall: PacketCallNode,
  PacketSize: PacketSizeNode,
  PacketJson: PacketJsonNode,
  RequestHTTP: RequestHTTPNode,
  // Route
  RouteACD: RouteACDNode,
  RouteGroup: RouteGroupNode,
  RouteQueueRule: RouteQueueRuleNode,
  RouteSkill: RouteSkillNode,
  RouteSkillGroup: RouteSkillGroupNode,
  UserData: UserDataNode,
  // Telephony
  Abort: AbortNode,
  ChoiceCall: ChoiceCallNode,
  ChoiceMent: ChoiceMentNode,
  CtiCall: CtiCallNode,
  Disconnect: DisconnectNode,
  DisSwitch: DisSwitchNode,
  GetChannel: GetChannelNode,
  GetDigit: GetDigitNode,
  MakeCall: MakeCallNode,
  Play: PlayNode,
  PushTone: PushToneNode,
  Record: RecordNode,
  Switch: SwitchNode,
  ToneDetect: ToneDetectNode,
  Transfer: TransferNode,
  WaitInbound: WaitInboundNode,
  WaitOutbound: WaitOutboundNode,
  // Tracking
  ConsumerMonit: ConsumerMonitNode,
  Tracking: TrackingNode,
  UserMenuStat: UserMenuStatNode,
  // UserFunc
  UserFuncCall: UserFuncCallNode,
  // VR
  CloseVR: CloseVRNode,
  OpenVR: OpenVRNode,
  RequestVR: RequestVRNode,
  ResponseVR: ResponseVRNode,
  VoiceRecognize: VoiceRecognizeNode,
  // Custom
  Ghost: GhostNode,
}
